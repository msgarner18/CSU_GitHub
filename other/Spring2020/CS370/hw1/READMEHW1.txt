README
======

A. This package includes the following files. In your own readme file, modify the information as needed.

|-- Description PDF of the assignment
|-- README.txt [This file]


B. Use your designed makefile 
To compile the code and build the executable using the command 

systemprompt>  make

To remove the  executable files use

systemprompt>  make clean

To run the program use (assuming seed is 3) 

systemprompt> ./Starter 3

which will run the program and generate the outputs.


C. Answer the following questions (1 point each, select/type the right answer).

    1. Malloc allocates memory dynamically on heap? – True
    2. When dynamically allocating an integer array, Malloc takes the number of elements as the input? – False- Malloc takes the number of elements as the input *sizeof(type)
    3. free() is defined inside which header file? – <stdlib.h>
    4. How many executable(s) are required to be generated by the Makefile for this assignment? – 2
    5. What command is used to call the default target in Makefile? – make

    Valgrind
    1. No leaks (with seed 7)
    ==2483825== Memcheck, a memory error detector
    ==2483825== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
    ==2483825== Using Valgrind-3.16.0 and LibVEX; rerun with -h for copyright info
    ==2483825== Command: ./hw1 7
    ==2483825== 
    [Starter.c]: With seed: 7
    [Executer.c]: Number of iterations is: 77
    [Executor]: Iteration with maximum vowel count is: 43
    [Starter]: Running ratio: 0.241263
    ==2483825== 
    ==2483825== HEAP SUMMARY:
    ==2483825==     in use at exit: 0 bytes in 0 blocks
    ==2483825==   total heap usage: 78 allocs, 78 frees, 10,366 bytes allocated
    ==2483825== 
    ==2483825== All heap blocks were freed -- no leaks are possible
    ==2483825== 
    ==2483825== For lists of detected and suppressed errors, rerun with: -s
    ==2483825== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

    2. With leaks (with seed 7)
    ==2486982== Memcheck, a memory error detector
    ==2486982== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
    ==2486982== Using Valgrind-3.16.0 and LibVEX; rerun with -h for copyright info
    ==2486982== Command: ./hw1 7
    ==2486982== 
    [Starter.c]: With seed: 7
    [Executer.c]: Number of iterations is: 77
    [Executor]: Iteration with maximum vowel count is: 43
    [Starter]: Running ratio: 0.241263
    ==2486982== 
    ==2486982== HEAP SUMMARY:
    ==2486982==     in use at exit: 9,342 bytes in 77 blocks
    ==2486982==   total heap usage: 78 allocs, 1 frees, 10,366 bytes allocated
    ==2486982== 
    ==2486982== LEAK SUMMARY:
    ==2486982==    definitely lost: 9,342 bytes in 77 blocks
    ==2486982==    indirectly lost: 0 bytes in 0 blocks
    ==2486982==      possibly lost: 0 bytes in 0 blocks
    ==2486982==    still reachable: 0 bytes in 0 blocks
    ==2486982==         suppressed: 0 bytes in 0 blocks
    ==2486982== Rerun with --leak-check=full to see details of leaked memory
    ==2486982== 
    ==2486982== For lists of detected and suppressed errors, rerun with: -s
    ==2486982== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)